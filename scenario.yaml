appInstallations:
  slack:
    appName: Slack
    appVersion: 0.2.2
    id: 019a0c38-ac7e-730b-93f4-f45e12c04d36
  testutilities:
    appName: Test Utilities
    appVersion: 1.0.0
    id: 019a0c33-9eeb-7c6c-9573-bb73ab225ec6
blocks:
  - name: App Mention Subscription
    type:
      appBlock:
        block: appMentionSubscription
        appInstallation: slack
        schema: '{"order":8,"name":"App Mention Subscription","category":"Messaging","description":"Subscribes to @mentions of this Slack app in any channel it''s a member of.","config":{"channelId":{"order":0,"name":"Channel ID (Optional)","description":"If specified, only app mentions from this channel will be received. Leave empty to receive mentions from all channels the app has access to.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":true,"inputs":{},"outputs":{"default":{"order":0,"name":"On App Mention","description":"Emitted when the app is mentioned. Contains the Slack app_mention event payload.","default":true,"possiblePrimaryParents":[],"type":{"description":"Payload of a Slack ''app_mention'' event. See https://api.slack.com/events/app_mention for more details.","properties":{"app_id":{"description":"The ID of the application that is being mentioned (i.e., this app).","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"Optional. The bot ID, if the message that caused the mention was posted by a bot user. Not typically present for app_mention events triggered by human users mentioning the app.","type":"string"},"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"channel_type":{"description":"Indicates the type of channel: ''channel'' (public), ''group'' (private), ''im'' (direct message), ''mpim'' (multi-person direct message).","type":"string"},"client_msg_id":{"description":"A unique identifier for the message, sent by the client. Only present for user-posted messages that trigger the mention.","type":"string"},"event_ts":{"description":"The timestamp of when an event was dispatched by Slack. It''s often very close to the message''s own ''ts''.","type":"string"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The specific type of event. For this block, it will always be ''app_mention''.","enum":["app_mention"],"type":"string"},"user":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"}},"required":["type","user","text","ts","channel","event_ts","team","app_id"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [795, 438]
  - name: Echo
    type:
      appBlock:
        block: sendTextMessage
        appInstallation: slack
        schema: '{"order":1,"name":"Send Text Message","category":"Messaging","description":"Sends a simple markdown-formatted text message to a Slack channel or user. Can optionally be a thread reply.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Send","description":"Trigger sending the message.","config":{"channelId":{"order":0,"name":"Channel or User ID","description":"ID of the channel (e.g., C0123ABC), DM (D0123ABC), or user (U0123ABC) to send the message to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":1,"name":"Message Text","description":"The text of the message. Markdown is supported by default.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"threadTs":{"order":2,"name":"Thread Timestamp","description":"If replying to a message, provide the ''ts'' (timestamp) of the parent message.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Sent","description":"Emitted when the message has been successfully sent.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message":{"description":"The complete message object as returned by Slack''s chat.postMessage API. Contains details about the message that was posted.","properties":{"app_id":{"description":"ID of a Slack App (e.g., A0123ABC).","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"ID of a bot user (e.g., B0123ABC).","type":"string"},"bot_profile":{"description":"Profile information for the bot user that posted the message.","properties":{"app_id":{"description":"The App ID associated with this bot (same as the outer app_id if present).","type":"string"},"deleted":{"description":"Indicates if the bot user is deleted.","type":"boolean"},"icons":{"description":"URLs for the bot''s avatar images.","properties":{"image_36":{"description":"URL for 36x36px icon.","type":"string"},"image_48":{"description":"URL for 48x48px icon.","type":"string"},"image_72":{"description":"URL for 72x72px icon.","type":"string"}},"required":["image_36","image_48","image_72"],"type":"object"},"id":{"description":"Bot ID (same as the outer bot_id if present).","type":"string"},"name":{"description":"Display name of the bot.","type":"string"},"team_id":{"description":"The Team ID (workspace ID) this bot belongs to (same as the outer team if present).","type":"string"},"updated":{"description":"Timestamp (Unix epoch) of the last profile update.","type":"number"}},"required":["id","deleted","name","updated","app_id","icons","team_id"],"type":"object"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"subtype":{"description":"Optional. Indicates a subtype of message, e.g., ''bot_message''. For messages sent by this block, it''s often ''bot_message''.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The type of the object, always ''message''.","enum":["message"],"type":"string"},"user":{"description":"The user ID of the sender. For messages sent by a bot token, this is the bot''s user ID.","type":"string"}},"required":["type","ts","text","user","bot_id","app_id","team","bot_profile"],"type":"object"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts","channel","message"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [795, 623]
    inputs:
      default:
        links:
          - block: App Mention Subscription
            output: default
        config:
          channelId: !expr outputs.appMentionSubscription.channel
          text: !expr "(function() {\n  const fullText = outputs.appMentionSubscription.text;\n  \n  // The mention format is usually <@APP_ID> with a space after it\n  // We'll find the first occurrence of \">\" and take everything after that\n  const mentionEndIndex = fullText.indexOf('>');\n  \n  if (mentionEndIndex !== -1) {\n    // Extract everything after the mention, trim any leading whitespace\n    return fullText.substring(mentionEndIndex + 1).trim();\n  } else {\n    // If no mention pattern is found, return the original text\n    return fullText;\n  }\n}())"
          threadTs: !expr outputs.appMentionSubscription.ts
  - name: Create Channel
    type:
      appBlock:
        block: createChannel
        appInstallation: slack
        schema: '{"order":16,"name":"Create Channel","category":"Channels","description":"Creates a new Slack channel (public or private).","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Create","description":"Trigger creating a new channel.","config":{"isPrivate":{"order":1,"name":"Private Channel","description":"If true, creates a private channel. If false, creates a public channel.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"name":{"order":0,"name":"Channel Name","description":"Name of the channel to create. Must be lowercase, without spaces or periods, and shorter than 22 characters.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Created","description":"Emitted when the channel has been successfully created.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The created channel object.","properties":{"created":{"description":"Unix timestamp when the channel was created.","type":"number"},"creator":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"is_channel":{"description":"True if this is a public channel.","type":"boolean"},"is_group":{"description":"True if this is a private channel.","type":"boolean"},"is_private":{"description":"True if this is a private channel.","type":"boolean"},"name":{"description":"The name of the created channel.","type":"string"}},"required":["id","name","is_channel","is_group","is_private","created","creator"],"type":"object"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 446]
    inputs:
      default:
        config:
          isPrivate: true
          name: !expr |-
            "test-channel-" + Math.random().toString(36).substring(2, 10)
  - name: Variables
    type:
      appBlock:
        block: variables
        appInstallation: testutilities
        schema: '{"order":0,"name":"Variables","category":"Testing","description":"A block that creates signals from a variables configuration object.","config":{"variables":{"order":0,"name":"Variables","description":"A JSON object where each field will become a signal with the field''s value.","type":{"description":"An object containing key-value pairs that will be converted to signals","type":"object"},"fixed":false,"required":true,"default":{},"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":false,"inputs":{},"outputs":{},"signals":{},"hasOnSync":true,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [431, 433]
    config:
      variables:
        userId: U03ECMT166B
  - name: Invite Users to Channel
    type:
      appBlock:
        block: inviteUsersToChannel
        appInstallation: slack
        schema: '{"order":22,"name":"Invite Users to Channel","category":"Channels","description":"Invites users to a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Invite","description":"Trigger inviting users to the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to invite users to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"users":{"order":1,"name":"User IDs","description":"Array of user IDs (e.g., [\"U0123ABC\", \"U0456DEF\"]) to invite to the channel.","type":{"items":{"type":"string"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Users Invited","description":"Emitted when users have been successfully invited to the channel.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The channel object.","properties":{"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"name":{"description":"The name of the channel.","type":"string"}},"required":["id"],"type":"object"},"users":{"description":"Array of user IDs that were invited.","items":{"type":"string"},"type":"array"}},"required":["channel","users"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 592]
    inputs:
      default:
        links:
          - block: Create Channel
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
          users: !expr |-
            [ref("signal.variables.userId")]
  - name: Kick Users from Channel
    type:
      appBlock:
        block: kickUsersFromChannel
        appInstallation: slack
        schema: '{"order":23,"name":"Kick Users from Channel","category":"Channels","description":"Removes users from a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Kick","description":"Trigger removing users from the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to remove users from.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"user":{"order":1,"name":"User ID","description":"User ID (e.g., U0123ABC) to remove from the channel.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"User Removed","description":"Emitted when the user has been successfully removed from the channel.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"user":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"}},"required":["channel","user"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 721]
    inputs:
      default:
        links:
          - block: Invite Users to Channel
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
          user: !expr |-
            ref("signal.variables.userId")
  - name: Invite Users to Channel (1)
    type:
      appBlock:
        block: inviteUsersToChannel
        appInstallation: slack
        schema: '{"order":22,"name":"Invite Users to Channel","category":"Channels","description":"Invites users to a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Invite","description":"Trigger inviting users to the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to invite users to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"users":{"order":1,"name":"User IDs","description":"Array of user IDs (e.g., [\"U0123ABC\", \"U0456DEF\"]) to invite to the channel.","type":{"items":{"type":"string"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Users Invited","description":"Emitted when users have been successfully invited to the channel.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The channel object.","properties":{"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"name":{"description":"The name of the channel.","type":"string"}},"required":["id"],"type":"object"},"users":{"description":"Array of user IDs that were invited.","items":{"type":"string"},"type":"array"}},"required":["channel","users"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1043]
    inputs:
      default:
        links:
          - block: Unarchive Channel (1)
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
          users: !expr |-
            [ref("signal.variables.userId")]
  - name: Get Channel Info
    type:
      appBlock:
        block: getChannelInfo
        appInstallation: slack
        schema: '{"order":19,"name":"Get Channel Info","category":"Channels","description":"Gets information about a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Get","description":"Trigger getting information about the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to get information about.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Info Retrieved","description":"Emitted when channel information has been successfully retrieved.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The channel object with detailed information.","properties":{"created":{"description":"Unix timestamp when the channel was created.","type":"number"},"creator":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"is_archived":{"description":"True if the channel is archived.","type":"boolean"},"is_channel":{"description":"True if this is a public channel.","type":"boolean"},"is_general":{"description":"True if this is the general channel.","type":"boolean"},"is_group":{"description":"True if this is a private channel.","type":"boolean"},"is_im":{"description":"True if this is a direct message.","type":"boolean"},"is_private":{"description":"True if this is a private channel.","type":"boolean"},"name":{"description":"The name of the channel.","type":"string"},"num_members":{"description":"Number of members in the channel.","type":"number"},"purpose":{"description":"Channel purpose information.","properties":{"creator":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"last_set":{"description":"Unix timestamp when purpose was last set.","type":"number"},"value":{"description":"The purpose text.","type":"string"}},"type":"object"},"topic":{"description":"Channel topic information.","properties":{"creator":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"last_set":{"description":"Unix timestamp when topic was last set.","type":"number"},"value":{"description":"The topic text.","type":"string"}},"type":"object"}},"required":["id","name","is_channel","is_group","is_im","is_private","is_archived","created"],"type":"object"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1181]
    inputs:
      default:
        links:
          - block: Invite Users to Channel (1)
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
  - name: Set Channel Purpose
    type:
      appBlock:
        block: setChannelPurpose
        appInstallation: slack
        schema: '{"order":21,"name":"Set Channel Purpose","category":"Channels","description":"Sets the purpose for a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Set","description":"Trigger setting the purpose for the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to set the purpose for.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"purpose":{"order":1,"name":"Purpose","description":"The new purpose for the channel.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Purpose Set","description":"Emitted when the channel purpose has been successfully set.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"purpose":{"description":"The purpose that was set for the channel.","type":"string"}},"required":["channel","purpose"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1325]
    inputs:
      default:
        links:
          - block: Get Channel Info
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
          purpose: the purpose is papaya
  - name: Set Channel Topic
    type:
      appBlock:
        block: setChannelTopic
        appInstallation: slack
        schema: '{"order":20,"name":"Set Channel Topic","category":"Channels","description":"Sets the topic for a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Set","description":"Trigger setting the topic for the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to set the topic for.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"topic":{"order":1,"name":"Topic","description":"The new topic for the channel.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Topic Set","description":"Emitted when the channel topic has been successfully set.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"topic":{"description":"The topic that was set for the channel.","type":"string"}},"required":["channel","topic"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1461]
    inputs:
      default:
        links:
          - block: Set Channel Purpose
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
          topic: the topic is papaya
  - name: Archive Channel
    type:
      appBlock:
        block: archiveChannel
        appInstallation: slack
        schema: '{"order":17,"name":"Archive Channel","category":"Channels","description":"Archives a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Archive","description":"Trigger archiving the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to archive.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Archived","description":"Emitted when the channel has been successfully archived.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1598]
    inputs:
      default:
        links:
          - block: Set Channel Topic
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
  - name: Unarchive Channel
    type:
      appBlock:
        block: unarchiveChannel
        appInstallation: slack
        schema: '{"order":18,"name":"Unarchive Channel","category":"Channels","description":"Unarchives a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Unarchive","description":"Trigger unarchiving the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to unarchive.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Unarchived","description":"Emitted when the channel has been successfully unarchived.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1740]
    inputs:
      default:
        links:
          - block: Archive Channel
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
  - name: Archive Channel (1)
    type:
      appBlock:
        block: archiveChannel
        appInstallation: slack
        schema: '{"order":17,"name":"Archive Channel","category":"Channels","description":"Archives a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Archive","description":"Trigger archiving the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to archive.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Archived","description":"Emitted when the channel has been successfully archived.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 1887]
    inputs:
      default:
        links:
          - block: Unarchive Channel
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
  - name: Unarchive Channel (1)
    description: When all users are removed (via the kick action) the channel is automatically archived, so we need to undo that
    type:
      appBlock:
        block: unarchiveChannel
        appInstallation: slack
        schema: '{"order":18,"name":"Unarchive Channel","category":"Channels","description":"Unarchives a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Unarchive","description":"Trigger unarchiving the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to unarchive.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Unarchived","description":"Emitted when the channel has been successfully unarchived.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1188, 895]
    inputs:
      default:
        links:
          - block: Kick Users from Channel
            output: default
        config:
          channelId: !expr outputs.createChannel.channel.id
  - name: Messages Subscription
    type:
      appBlock:
        block: messagesSubscription
        appInstallation: slack
        schema: '{"order":7,"name":"Messages Subscription","category":"Messaging","description":"Subscribes to messages in Slack channels, optionally filtered by specific channel.","config":{"channelId":{"order":0,"name":"Channel ID (Optional)","description":"If specified, only messages from this channel will be received. Leave empty to receive messages from all channels the app has access to.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"includeOwnMessages":{"order":1,"name":"Include Own Messages","description":"If true, the app will also receive messages it posts itself. If false, it will only receive messages from other users.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":true,"inputs":{},"outputs":{"default":{"order":0,"name":"On Message","description":"Emitted when a message is posted. Contains the Slack message event payload.","default":true,"possiblePrimaryParents":[],"type":{"description":"Payload of a Slack ''message'' event. See https://api.slack.com/events/message for more details.","properties":{"app_id":{"description":"Optional. The ID of the application that posted the message, if posted by a bot/app.","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"Optional. The bot ID, if the message was posted by a bot user.","type":"string"},"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"channel_type":{"description":"Indicates the type of channel: ''channel'' (public), ''group'' (private), ''im'' (direct message), ''mpim'' (multi-person direct message).","type":"string"},"client_msg_id":{"description":"A unique identifier for the message, sent by the client. Only present for user-posted messages.","type":"string"},"event_ts":{"description":"The timestamp of when an event was dispatched by Slack. It''s often very close to the message''s own ''ts''.","type":"string"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"subtype":{"description":"Optional. Indicates a subtype of message, e.g., ''bot_message'', ''channel_join'', etc.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The specific type of event. For this block, it will always be ''message''.","enum":["message"],"type":"string"},"user":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"}},"required":["type","text","ts","channel","event_ts","team"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1645, 592]
    config:
      channelId: !expr |-
        ref("signal.captureTestChannel.value")
  - name: Create Test Channel
    type:
      appBlock:
        block: createChannel
        appInstallation: slack
        schema: '{"order":16,"name":"Create Channel","category":"Channels","description":"Creates a new Slack channel (public or private).","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Create","description":"Trigger creating a new channel.","config":{"isPrivate":{"order":1,"name":"Private Channel","description":"If true, creates a private channel. If false, creates a public channel.","type":{"type":"boolean"},"fixed":false,"required":false,"default":false,"hasValidator":false,"fieldKey":"","sensitive":false},"name":{"order":0,"name":"Channel Name","description":"Name of the channel to create. Must be lowercase, without spaces or periods, and shorter than 22 characters.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Channel Created","description":"Emitted when the channel has been successfully created.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The created channel object.","properties":{"created":{"description":"Unix timestamp when the channel was created.","type":"number"},"creator":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"is_channel":{"description":"True if this is a public channel.","type":"boolean"},"is_group":{"description":"True if this is a private channel.","type":"boolean"},"is_private":{"description":"True if this is a private channel.","type":"boolean"},"name":{"description":"The name of the created channel.","type":"string"}},"required":["id","name","is_channel","is_group","is_private","created","creator"],"type":"object"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1645, 233]
    inputs:
      default:
        config:
          isPrivate: true
          name: !expr |-
            "test-sandbox-channel-" + Math.random().toString(36).substring(2, 10)
  - name: Capture Test Channel
    type:
      appBlock:
        block: capture
        appInstallation: testutilities
        schema: '{"order":1,"name":"Capture","category":"Testing","description":"Captures the last event received and makes it available as an exported key value","config":{"defaultValue":{"order":0,"name":"Default value","description":"Default value to use when no event has been captured yet","type":{},"fixed":false,"required":false,"default":{},"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"value":{"order":0,"name":"Value to export","description":"","type":{},"fixed":false,"required":true,"default":{},"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{},"signals":{},"hasOnSync":true,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1645, 364]
    config:
      defaultValue: null
    inputs:
      default:
        links:
          - block: Create Test Channel
            output: default
        config:
          value: !expr outputs.createTestChannel.channel.id
  - name: Invite Users to Channel (2)
    type:
      appBlock:
        block: inviteUsersToChannel
        appInstallation: slack
        schema: '{"order":22,"name":"Invite Users to Channel","category":"Channels","description":"Invites users to a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Invite","description":"Trigger inviting users to the specified channel.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to invite users to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"users":{"order":1,"name":"User IDs","description":"Array of user IDs (e.g., [\"U0123ABC\", \"U0456DEF\"]) to invite to the channel.","type":{"items":{"type":"string"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Users Invited","description":"Emitted when users have been successfully invited to the channel.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The channel object.","properties":{"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"name":{"description":"The name of the channel.","type":"string"}},"required":["id"],"type":"object"},"users":{"description":"Array of user IDs that were invited.","items":{"type":"string"},"type":"array"}},"required":["channel","users"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1919, 364]
    inputs:
      default:
        links:
          - block: Create Test Channel
            output: default
        config:
          channelId: !expr outputs.createTestChannel.channel.id
          users: !expr |-
            [ref("signal.variables.userId")]
  - name: Add Reaction
    type:
      appBlock:
        block: addReaction
        appInstallation: slack
        schema: '{"order":9,"name":"Add Reaction","category":"Reactions","description":"Adds a reaction (emoji) to a specific message in a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Add","description":"Trigger adding a reaction to the specified message.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) containing the message.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"name":{"order":2,"name":"Reaction Name","description":"The emoji name to add as a reaction (without colons, e.g., ''thumbsup'', ''heart'').","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"ts":{"order":1,"name":"Message Timestamp","description":"The timestamp (ts) of the message to add a reaction to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Reaction Added","description":"Emitted when the reaction has been successfully added.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"reaction":{"description":"The emoji name that was added as a reaction.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["channel","ts","reaction","ok"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1645, 721]
    inputs:
      default:
        links:
          - block: Messages Subscription
            output: default
        config:
          channelId: !expr outputs.messagesSubscription.channel
          name: robot_face
          ts: !expr outputs.messagesSubscription.ts
  - name: Reactions Subscription
    type:
      appBlock:
        block: reactionsSubscription
        appInstallation: slack
        schema: '{"order":12,"name":"Reactions Subscription","category":"Reactions","description":"Subscribes to reaction add and remove events on Slack messages.","config":{},"hasOnInternalMessage":true,"inputs":{},"outputs":{"default":{"order":0,"name":"On Reaction","description":"Emitted when a reaction is added or removed. Contains the Slack reaction event payload.","default":true,"possiblePrimaryParents":[],"type":{"description":"Payload of a Slack ''reaction_added'' or ''reaction_removed'' event. See https://api.slack.com/events/reaction_added and https://api.slack.com/events/reaction_removed for more details.","properties":{"event_ts":{"description":"The timestamp of when an event was dispatched by Slack. It''s often very close to the message''s own ''ts''.","type":"string"},"item":{"description":"Information about the item that was reacted to.","properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The type of item (typically ''message'').","type":"string"}},"required":["type","channel","ts"],"type":"object"},"item_user":{"description":"The user ID of the author of the message that was reacted to.","type":"string"},"reaction":{"description":"The emoji name of the reaction (without colons, e.g., ''thumbsup'').","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"type":{"description":"The specific type of event. Will be either ''reaction_added'' or ''reaction_removed''.","enum":["reaction_added","reaction_removed"],"type":"string"},"user":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"}},"required":["type","user","reaction","item_user","item","event_ts","team"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1919, 592]
  - name: Auth Metadata
    type:
      appBlock:
        block: authMetadata
        appInstallation: slack
        schema: '{"order":0,"name":"Auth Metadata","category":"Auth","description":"Gets authentication metadata for the configured bot token, including team and user information.","config":{},"hasOnInternalMessage":false,"inputs":{},"outputs":{},"signals":{"bot_id":{"order":5,"name":"Bot ID","description":"The bot ID (only present for bot tokens).","sensitive":false},"team":{"order":1,"name":"Workspace Name","description":"The workspace name.","sensitive":false},"team_id":{"order":3,"name":"Workspace ID","description":"The workspace ID.","sensitive":false},"url":{"order":0,"name":"Workspace URL","description":"The workspace URL.","sensitive":false},"user":{"order":2,"name":"User Name","description":"The authenticated user''s name (typically ''bot'' for bot tokens).","sensitive":false},"user_id":{"order":4,"name":"User ID","description":"The authenticated user''s ID.","sensitive":false}},"hasOnSync":true,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [431, 618]
  - name: Condition
    type:
      coreBlock: condition
    position: [1919, 721]
    inputs:
      default:
        links:
          - block: Reactions Subscription
            output: default
        config:
          condition: !expr |-
            outputs.reactionsSubscription.user !== ref("signal.authMetadata.user_id")
  - name: Reaction Response Message
    description: Sends a message to the same channel where a reaction was added, acknowledging the reaction with its name.
    type:
      appBlock:
        block: sendTextMessage
        appInstallation: slack
        schema: '{"order":1,"name":"Send Text Message","category":"Messaging","description":"Sends a simple markdown-formatted text message to a Slack channel or user. Can optionally be a thread reply.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Send","description":"Trigger sending the message.","config":{"channelId":{"order":0,"name":"Channel or User ID","description":"ID of the channel (e.g., C0123ABC), DM (D0123ABC), or user (U0123ABC) to send the message to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":1,"name":"Message Text","description":"The text of the message. Markdown is supported by default.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"threadTs":{"order":2,"name":"Thread Timestamp","description":"If replying to a message, provide the ''ts'' (timestamp) of the parent message.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Sent","description":"Emitted when the message has been successfully sent.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message":{"description":"The complete message object as returned by Slack''s chat.postMessage API. Contains details about the message that was posted.","properties":{"app_id":{"description":"ID of a Slack App (e.g., A0123ABC).","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"ID of a bot user (e.g., B0123ABC).","type":"string"},"bot_profile":{"description":"Profile information for the bot user that posted the message.","properties":{"app_id":{"description":"The App ID associated with this bot (same as the outer app_id if present).","type":"string"},"deleted":{"description":"Indicates if the bot user is deleted.","type":"boolean"},"icons":{"description":"URLs for the bot''s avatar images.","properties":{"image_36":{"description":"URL for 36x36px icon.","type":"string"},"image_48":{"description":"URL for 48x48px icon.","type":"string"},"image_72":{"description":"URL for 72x72px icon.","type":"string"}},"required":["image_36","image_48","image_72"],"type":"object"},"id":{"description":"Bot ID (same as the outer bot_id if present).","type":"string"},"name":{"description":"Display name of the bot.","type":"string"},"team_id":{"description":"The Team ID (workspace ID) this bot belongs to (same as the outer team if present).","type":"string"},"updated":{"description":"Timestamp (Unix epoch) of the last profile update.","type":"number"}},"required":["id","deleted","name","updated","app_id","icons","team_id"],"type":"object"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"subtype":{"description":"Optional. Indicates a subtype of message, e.g., ''bot_message''. For messages sent by this block, it''s often ''bot_message''.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The type of the object, always ''message''.","enum":["message"],"type":"string"},"user":{"description":"The user ID of the sender. For messages sent by a bot token, this is the bot''s user ID.","type":"string"}},"required":["type","ts","text","user","bot_id","app_id","team","bot_profile"],"type":"object"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts","channel","message"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1919, 975]
    inputs:
      default:
        links:
          - block: Get Reactions
            output: default
        config:
          channelId: !expr outputs.reactionsSubscription.item.channel
          text: !expr '`Reaction seen! ${outputs.reactionsSubscription.reaction}; Summary of reactions: ${JSON.stringify(outputs.getReactions.message.reactions)}`'
          threadTs: !expr outputs.reactionsSubscription.item.ts
  - name: Remove Reaction
    type:
      appBlock:
        block: removeReaction
        appInstallation: slack
        schema: '{"order":10,"name":"Remove Reaction","category":"Reactions","description":"Removes a reaction (emoji) from a specific message in a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Remove","description":"Trigger removing a reaction from the specified message.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) containing the message.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"name":{"order":2,"name":"Reaction Name","description":"The emoji name to remove as a reaction (without colons, e.g., ''thumbsup'', ''heart'').","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"ts":{"order":1,"name":"Message Timestamp","description":"The timestamp (ts) of the message to remove a reaction from.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Reaction Removed","description":"Emitted when the reaction has been successfully removed.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"reaction":{"description":"The emoji name that was removed as a reaction.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["channel","ts","reaction"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1645, 975]
    inputs:
      default:
        links:
          - block: Sleep
            output: default
        config:
          channelId: !expr outputs.addReaction.channel
          name: !expr outputs.addReaction.reaction
          ts: !expr outputs.addReaction.ts
  - name: Sleep
    type:
      coreBlock: sleep
    position: [1645, 847]
    inputs:
      default:
        links:
          - block: Add Reaction
            output: default
        config:
          sleep: 3
  - name: Get Reactions
    type:
      appBlock:
        block: getReactions
        appInstallation: slack
        schema: '{"order":11,"name":"Get Reactions","category":"Reactions","description":"Gets all reactions for a specific message in a Slack channel.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Get","description":"Trigger getting reactions for the specified message.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) containing the message.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"full":{"order":2,"name":"Full Details","description":"If true, returns full reaction details including user lists. If false, returns only reaction counts.","type":{"type":"boolean"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"ts":{"order":1,"name":"Message Timestamp","description":"The timestamp (ts) of the message to get reactions for.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Reactions Retrieved","description":"Emitted when reactions have been successfully retrieved.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message":{"description":"The message object with its reactions.","properties":{"reactions":{"description":"Array of reaction objects on this message.","items":{"properties":{"count":{"description":"Number of users who reacted with this emoji.","type":"number"},"name":{"description":"The emoji name (without colons).","type":"string"},"users":{"description":"Array of user IDs who reacted (if full=true).","items":{"type":"string"},"type":"array"}},"required":["name","count"],"type":"object"},"type":"array"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts"],"type":"object"},"type":{"description":"Type of the item (typically ''message'').","type":"string"}},"required":["channel","message","type"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1919, 847]
    inputs:
      default:
        links:
          - block: Condition
            output: then
        config:
          channelId: !expr outputs.reactionsSubscription.item.channel
          ts: !expr outputs.reactionsSubscription.item.ts
  - name: Send Message With Interactions
    type:
      appBlock:
        block: sendMessageWithInteractions
        appInstallation: slack
        schema: '{"order":6,"name":"Send Message With Interactions","category":"Messaging","description":"Sends a message with Block Kit blocks to a Slack channel and listens for user interactions (button clicks, menu selections, etc.). Has two outputs: one when the message is sent, and one for each interaction.","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"name":"Send","description":"Trigger sending the interactive message.","config":{"blocks":{"order":1,"name":"Message Blocks","description":"The Slack Block Kit blocks to include in the message, as a JSON array. May contain interactive elements like buttons, select menus, etc.","type":{"items":{"description":"A Slack Block Kit block object.","type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"channelId":{"order":0,"name":"Channel or User ID","description":"ID of the channel (e.g., C0123ABC), DM (D0123ABC), or user (U0123ABC) to send the message to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":2,"name":"Fallback Text","description":"Fallback text to display in notifications and for accessibility. Should summarize the content of your blocks.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"threadTs":{"order":3,"name":"Thread Timestamp","description":"If replying to a message, provide the ''ts'' (timestamp) of the parent message.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"interaction":{"order":1,"name":"Interaction Received","description":"Emitted when a user interacts with the message (clicks button, selects from menu, etc.).","possiblePrimaryParents":["default"],"type":{"description":"Slack interaction payload containing details about the user action.","properties":{"actions":{"description":"Array of actions that were triggered.","items":{"description":"Details about the specific action (button click, menu selection, etc.).","properties":{"action_id":{"description":"The action_id of the element that was triggered.","type":"string"},"action_ts":{"description":"Timestamp when the action occurred.","type":"string"},"block_id":{"description":"The block_id of the block containing the triggered element.","type":"string"},"selected_channel":{"description":"The selected channel ID (for channels_select).","type":"string"},"selected_channels":{"description":"The selected channel IDs (for multi_channels_select).","items":{"type":"string"},"type":"array"},"selected_conversation":{"description":"The selected conversation ID (for conversations_select).","type":"string"},"selected_conversations":{"description":"The selected conversation IDs (for multi_conversations_select).","items":{"type":"string"},"type":"array"},"selected_date":{"description":"The selected date (for datepicker, format: YYYY-MM-DD).","type":"string"},"selected_option":{"description":"The selected option (for single select menus).","properties":{"text":{"properties":{"text":{"type":"string"},"type":{"type":"string"}},"type":"object"},"value":{"type":"string"}},"type":"object"},"selected_options":{"description":"The selected options (for multi-select menus).","items":{"properties":{"text":{"properties":{"text":{"type":"string"},"type":{"type":"string"}},"type":"object"},"value":{"type":"string"}},"type":"object"},"type":"array"},"selected_time":{"description":"The selected time (for timepicker, format: HH:MM).","type":"string"},"selected_user":{"description":"The selected user ID (for users_select).","type":"string"},"selected_users":{"description":"The selected user IDs (for multi_users_select).","items":{"type":"string"},"type":"array"},"text":{"description":"Text object for elements like buttons.","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text","mrkdwn"],"type":"string"}},"type":"object"},"type":{"description":"The type of action (e.g., ''button'', ''static_select'', ''users_select'', ''conversations_select'', ''channels_select'', ''external_select'', ''overflow'', ''datepicker'', ''timepicker'', ''radio_buttons'', ''checkboxes'').","type":"string"},"value":{"description":"The value of the action (for buttons and overflow menus).","type":"string"}},"required":["action_id","block_id","type","action_ts"],"type":"object"},"type":"array"},"channel":{"description":"Information about the channel where the interaction occurred.","properties":{"id":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"name":{"description":"Channel name.","type":"string"}},"required":["id","name"],"type":"object"},"container":{"description":"Information about the message container.","properties":{"message_ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"Container type (usually ''message'').","type":"string"}},"required":["type","message_ts"],"type":"object"},"message":{"description":"The message that contains the interactive element.","type":"object"},"response_url":{"description":"URL that can be used to respond to the interaction.","type":"string"},"team":{"description":"Information about the workspace.","properties":{"domain":{"description":"Workspace domain.","type":"string"},"id":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"}},"required":["id","domain"],"type":"object"},"trigger_id":{"description":"A temporary token to open modals or other interactive elements.","type":"string"},"type":{"description":"The type of interaction (e.g., ''block_actions'', ''interactive_message'', ''view_submission'').","type":"string"},"user":{"description":"Information about the user who performed the interaction.","properties":{"id":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"name":{"description":"The user''s display name.","type":"string"},"team_id":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"username":{"description":"The user''s username.","type":"string"}},"required":["id","username","name","team_id"],"type":"object"}},"required":["type","user","trigger_id","team","channel"],"type":"object"}},"sent":{"order":0,"name":"Message Sent","description":"Emitted when the interactive message has been successfully sent.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message":{"description":"The complete message object as returned by Slack''s chat.postMessage API.","properties":{"app_id":{"description":"ID of a Slack App (e.g., A0123ABC).","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"ID of a bot user (e.g., B0123ABC).","type":"string"},"bot_profile":{"description":"Profile information for the bot user that posted the message.","properties":{"app_id":{"description":"The App ID associated with this bot (same as the outer app_id if present).","type":"string"},"deleted":{"description":"Indicates if the bot user is deleted.","type":"boolean"},"icons":{"description":"URLs for the bot''s avatar images.","properties":{"image_36":{"description":"URL for 36x36px icon.","type":"string"},"image_48":{"description":"URL for 48x48px icon.","type":"string"},"image_72":{"description":"URL for 72x72px icon.","type":"string"}},"required":["image_36","image_48","image_72"],"type":"object"},"id":{"description":"Bot ID (same as the outer bot_id if present).","type":"string"},"name":{"description":"Display name of the bot.","type":"string"},"team_id":{"description":"The Team ID (workspace ID) this bot belongs to (same as the outer team if present).","type":"string"},"updated":{"description":"Timestamp (Unix epoch) of the last profile update.","type":"number"}},"required":["id","deleted","name","updated","app_id","icons","team_id"],"type":"object"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"subtype":{"description":"Optional. Indicates a subtype of message, e.g., ''bot_message''.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The type of the object, always ''message''.","enum":["message"],"type":"string"},"user":{"description":"The user ID of the sender. For messages sent by a bot token, this is the bot''s user ID.","type":"string"}},"required":["type","ts","text","user","bot_id","app_id","team","bot_profile","blocks"],"type":"object"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts","channel","message"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [2347, 592]
    inputs:
      default:
        config:
          blocks:
            - text:
                text: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                type: mrkdwn
              type: section
            - elements:
                - action_id: red_button
                  text:
                    emoji: true
                    text: red
                    type: plain_text
                  type: button
                  value: red_button_clicked
                - action_id: blue_button
                  text:
                    emoji: true
                    text: blue
                    type: plain_text
                  type: button
                  value: blue_button_clicked
              type: actions
          channelId: !expr |-
            ref("signal.captureTestChannel.value")
          text: test
  - name: Button Click Modal
    description: This entity opens a modal view that displays information about which button was clicked and provides an OK button for user confirmation.
    type:
      appBlock:
        block: openViewWithInteractions
        appInstallation: slack
        schema: '{"order":24,"name":"Open View With Interactions","category":"Views","description":"Opens a modal view with Block Kit blocks and listens for user interactions (form submissions, view closed events).","config":{},"hasOnInternalMessage":true,"inputs":{"default":{"order":0,"name":"Open","description":"Trigger opening the interactive view.","config":{"blocks":{"order":2,"name":"Blocks","description":"Array of Block Kit blocks to display in the modal.","type":{"items":{"type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"callbackId":{"order":5,"name":"Callback ID","description":"An identifier you can use to identify this particular view.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"clearOnClose":{"order":7,"name":"Clear on Close","description":"When true, clicking the close button will clear all views in the modal stack.","type":{"type":"boolean"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"close":{"order":4,"name":"Close Button Text","description":"Optional close button text (max 24 characters).","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"externalId":{"order":9,"name":"External ID","description":"A unique external ID for the view (max 255 characters).","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"notifyOnClose":{"order":8,"name":"Notify on Close","description":"When true, Slack will send a view_closed event when the modal is closed.","type":{"type":"boolean"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"privateMetadata":{"order":6,"name":"Private Metadata","description":"Private data that will be passed to interaction payloads (max 3000 characters).","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"submit":{"order":3,"name":"Submit Button Text","description":"Optional submit button text (max 24 characters).","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"title":{"order":1,"name":"Title","description":"The title text of the modal (max 24 characters).","type":{"type":"string"},"fixed":false,"required":true,"default":"Title","hasValidator":false,"fieldKey":"","sensitive":false},"triggerId":{"order":0,"name":"Trigger ID","description":"The trigger_id received from a Slack interaction (button click, slash command, etc.). Required to open a modal.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"interaction":{"order":1,"name":"View Interaction","description":"Emitted when a user interacts with the view (submits form, closes modal, etc.).","possiblePrimaryParents":["default"],"type":{"description":"Slack view interaction payload containing details about the user action.","properties":{"api_app_id":{"description":"The app ID of the app that opened the view.","type":"string"},"response_urls":{"description":"Array of response URLs that can be used to send messages.","items":{"properties":{"channel_id":{"type":"string"},"response_url":{"type":"string"}},"type":"object"},"type":"array"},"team":{"description":"Information about the workspace.","properties":{"domain":{"description":"Workspace domain.","type":"string"},"id":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"}},"required":["id","domain"],"type":"object"},"token":{"description":"A verification token (deprecated, use signing secret instead).","type":"string"},"trigger_id":{"description":"A temporary token that can be used to open another modal.","type":"string"},"type":{"description":"The type of view interaction.","enum":["view_submission","view_closed"],"type":"string"},"user":{"description":"Information about the user who performed the interaction.","properties":{"id":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"},"name":{"description":"The user''s display name.","type":"string"},"team_id":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"username":{"description":"The user''s username.","type":"string"}},"required":["id","username","name","team_id"],"type":"object"},"view":{"description":"The view object at the time of interaction.","properties":{"blocks":{"items":{"type":"object"},"type":"array"},"callback_id":{"type":"string"},"clear_on_close":{"type":"boolean"},"external_id":{"type":"string"},"hash":{"type":"string"},"id":{"description":"The view ID.","type":"string"},"notify_on_close":{"type":"boolean"},"private_metadata":{"type":"string"},"state":{"description":"The submitted form values (for view_submission).","properties":{"values":{"type":"object"}},"type":"object"},"title":{"type":"object"},"type":{"enum":["modal"],"type":"string"}},"required":["id","type","state","hash"],"type":"object"}},"required":["type","user","api_app_id","token","team","view"],"type":"object"}},"opened":{"order":0,"name":"View Opened","description":"Emitted when the modal view has been successfully opened.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"view":{"description":"The opened view object as returned by Slack.","properties":{"app_id":{"description":"The app ID that opened the view.","type":"string"},"blocks":{"description":"The blocks that were rendered in the view.","items":{"type":"object"},"type":"array"},"bot_id":{"description":"The bot ID associated with the app.","type":"string"},"callback_id":{"description":"The callback ID if one was provided.","type":"string"},"clear_on_close":{"description":"Whether the view stack clears on close.","type":"boolean"},"external_id":{"description":"The external ID if one was provided.","type":"string"},"hash":{"description":"A unique value for this view state.","type":"string"},"id":{"description":"The unique ID of the view.","type":"string"},"notify_on_close":{"description":"Whether view_closed events are sent.","type":"boolean"},"private_metadata":{"description":"The private metadata that was included.","type":"string"},"root_view_id":{"description":"The root view ID if this is part of a view stack.","type":"string"},"state":{"description":"The current state of the view''s interactive components.","properties":{"values":{"description":"Map of block IDs to their current values.","type":"object"}},"type":"object"},"team_id":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"title":{"properties":{"text":{"type":"string"},"type":{"type":"string"}},"type":"object"},"type":{"description":"The type of view.","enum":["modal"],"type":"string"}},"required":["id","team_id","type","title","blocks","state","hash"],"type":"object"}},"required":["view"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [2347, 794]
    inputs:
      default:
        links:
          - block: Send Message With Interactions
            output: interaction
        config:
          blocks: !expr |-
            [{
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": `${outputs.sendMessageWithInteractions.actions[0].action_id} clicked by *${outputs.sendMessageWithInteractions.user.name}* in #${outputs.sendMessageWithInteractions.channel.name}`
              }
            }]
          callbackId: button_click_confirmation
          submit: OK
          title: Button Clicked
          triggerId: !expr outputs.sendMessageWithInteractions.trigger_id
  - name: View Submission Confirmation
    description: This entity sends an ephemeral confirmation message to the user who submitted a modal view, confirming their action on a test channel.
    type:
      appBlock:
        block: sendEphemeralMessageBlocks
        appInstallation: slack
        schema: '{"order":3,"name":"Send Ephemeral Message Blocks","category":"Messaging","description":"Sends a message with Block Kit blocks to a Slack channel that is only visible to a specific user.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Send","description":"Trigger sending the ephemeral message.","config":{"blocks":{"order":2,"name":"Message Blocks","description":"JSON array of Slack Block Kit blocks for the message content.","type":{},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) to send the message to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":3,"name":"Fallback Text","description":"Plain text fallback for the message, used in notifications and when blocks cannot be displayed.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"userId":{"order":1,"name":"User ID","description":"ID of the user (e.g., U0123ABC) who should see the ephemeral message.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Sent","description":"Emitted when the ephemeral message has been successfully sent.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message_ts":{"description":"Timestamp of the ephemeral message that was sent.","type":"string"},"user":{"description":"ID of a Slack user (e.g., U0123ABC).","type":"string"}},"required":["message_ts","channel","user"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [2347, 963]
    inputs:
      default:
        links:
          - block: Button Click Modal
            output: interaction
        config:
          blocks:
            - text:
                text: |-
                  :white_check_mark: *View Submitted Successfully*

                  Your modal view has been submitted and processed. Thank you for your input!
                type: mrkdwn
              type: section
          channelId: !expr |-
            ref("signal.captureTestChannel.value")
          text: View submitted successfully! Your action has been confirmed.
          userId: !expr outputs.buttonClickModal.user.id
  - name: View Submission Confirmation DM
    description: This entity sends a direct message confirmation to the user after they submit a view/modal, letting them know their submission was received.
    type:
      appBlock:
        block: sendTextMessage
        appInstallation: slack
        schema: '{"order":1,"name":"Send Text Message","category":"Messaging","description":"Sends a simple markdown-formatted text message to a Slack channel or user. Can optionally be a thread reply.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Send","description":"Trigger sending the message.","config":{"channelId":{"order":0,"name":"Channel or User ID","description":"ID of the channel (e.g., C0123ABC), DM (D0123ABC), or user (U0123ABC) to send the message to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":1,"name":"Message Text","description":"The text of the message. Markdown is supported by default.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"threadTs":{"order":2,"name":"Thread Timestamp","description":"If replying to a message, provide the ''ts'' (timestamp) of the parent message.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Sent","description":"Emitted when the message has been successfully sent.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message":{"description":"The complete message object as returned by Slack''s chat.postMessage API. Contains details about the message that was posted.","properties":{"app_id":{"description":"ID of a Slack App (e.g., A0123ABC).","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"ID of a bot user (e.g., B0123ABC).","type":"string"},"bot_profile":{"description":"Profile information for the bot user that posted the message.","properties":{"app_id":{"description":"The App ID associated with this bot (same as the outer app_id if present).","type":"string"},"deleted":{"description":"Indicates if the bot user is deleted.","type":"boolean"},"icons":{"description":"URLs for the bot''s avatar images.","properties":{"image_36":{"description":"URL for 36x36px icon.","type":"string"},"image_48":{"description":"URL for 48x48px icon.","type":"string"},"image_72":{"description":"URL for 72x72px icon.","type":"string"}},"required":["image_36","image_48","image_72"],"type":"object"},"id":{"description":"Bot ID (same as the outer bot_id if present).","type":"string"},"name":{"description":"Display name of the bot.","type":"string"},"team_id":{"description":"The Team ID (workspace ID) this bot belongs to (same as the outer team if present).","type":"string"},"updated":{"description":"Timestamp (Unix epoch) of the last profile update.","type":"number"}},"required":["id","deleted","name","updated","app_id","icons","team_id"],"type":"object"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"subtype":{"description":"Optional. Indicates a subtype of message, e.g., ''bot_message''. For messages sent by this block, it''s often ''bot_message''.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The type of the object, always ''message''.","enum":["message"],"type":"string"},"user":{"description":"The user ID of the sender. For messages sent by a bot token, this is the bot''s user ID.","type":"string"}},"required":["type","ts","text","user","bot_id","app_id","team","bot_profile"],"type":"object"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts","channel","message"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [2608, 963]
    inputs:
      default:
        links:
          - block: Button Click Modal
            output: interaction
        config:
          channelId: !expr outputs.buttonClickModal.user.id
          text: Thanks for your submission! We've received your information and will process it shortly.
  - name: Sleep (1)
    type:
      coreBlock: sleep
    position: [795, 760]
    inputs:
      default:
        links:
          - block: Echo
            output: default
        config:
          sleep: 2
  - name: Update Echo Message
    description: This entity updates a previously sent Slack message by appending '(updated after sleep)' to its original content.
    type:
      appBlock:
        block: updateMessageBlocks
        appInstallation: slack
        schema: '{"order":4,"name":"Update Message Blocks","category":"Messaging","description":"Updates an existing Slack message with new Block Kit blocks.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Update","description":"Trigger updating the message with new blocks.","config":{"blocks":{"order":2,"name":"New Message Blocks","description":"The new Slack Block Kit blocks to replace the message content, as a JSON array.","type":{"items":{"description":"A Slack Block Kit block object.","type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) containing the message to update.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":3,"name":"Fallback Text","description":"Fallback text to display in notifications and for accessibility. Should summarize the content of your blocks.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"ts":{"order":1,"name":"Message Timestamp","description":"Timestamp (ts) of the message to update.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Updated","description":"Emitted when the message has been successfully updated.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"text":{"description":"The text content of the updated message.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts","channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [795, 908]
    inputs:
      default:
        links:
          - block: Sleep (1)
            output: default
        config:
          blocks: !expr |-
            [{"type": "section", "text": {"type": "mrkdwn", "text": outputs.echo.message.text + " (updated after sleep)"}}]
          channelId: !expr outputs.echo.channel
          text: !expr |-
            outputs.echo.message.text + " (updated after sleep)"
          ts: !expr outputs.echo.ts
  - name: Sleep (2)
    type:
      coreBlock: sleep
    position: [795, 1055]
    inputs:
      default:
        links:
          - block: Update Echo Message
            output: default
        config:
          sleep: 2
  - name: Delete Message
    type:
      appBlock:
        block: deleteMessage
        appInstallation: slack
        schema: '{"order":5,"name":"Delete Message","category":"Messaging","description":"Deletes a message from a Slack channel using its channel ID and timestamp.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Delete","description":"Trigger deletion of the specified message.","config":{"channelId":{"order":0,"name":"Channel ID","description":"ID of the channel (e.g., C0123ABC) where the message is located.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"ts":{"order":1,"name":"Message Timestamp","description":"The timestamp (ts) of the message to delete.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Deleted","description":"Emitted when the message has been successfully deleted.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["channel","ts"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [795, 1199]
    inputs:
      default:
        links:
          - block: Sleep (2)
            output: default
        config:
          channelId: !expr outputs.echo.channel
          ts: !expr outputs.echo.ts
  - name: Send Message Blocks
    type:
      appBlock:
        block: sendMessageBlocks
        appInstallation: slack
        schema: '{"order":2,"name":"Send Message Blocks","category":"Messaging","description":"Sends a message to a Slack channel or user with a JSON list of Block Kit blocks. Can optionally be a thread reply.","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"name":"Send","description":"Trigger sending the message with blocks.","config":{"blocks":{"order":1,"name":"Message Blocks","description":"The Slack Block Kit blocks to include in the message, as a JSON array.","type":{"items":{"description":"A Slack Block Kit block object.","type":"object"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"channelId":{"order":0,"name":"Channel or User ID","description":"ID of the channel (e.g., C0123ABC), DM (D0123ABC), or user (U0123ABC) to send the message to.","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"text":{"order":2,"name":"Fallback Text","description":"Fallback text to display in notifications and for accessibility. Should summarize the content of your blocks.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"threadTs":{"order":3,"name":"Thread Timestamp","description":"If replying to a message, provide the ''ts'' (timestamp) of the parent message.","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Message Sent","description":"Emitted when the message with blocks has been successfully sent.","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"ID of a Slack channel (e.g., C0123ABC), private group (G0123ABC), or direct message (D0123ABC).","type":"string"},"message":{"description":"The complete message object as returned by Slack''s chat.postMessage API. Contains details about the message that was posted.","properties":{"app_id":{"description":"ID of a Slack App (e.g., A0123ABC).","type":"string"},"blocks":{"description":"An array of Slack Block Kit layout blocks. Present if the message was composed using Block Kit or if Slack converted the text to a rich_text block. See Slack documentation for block structures: https://api.slack.com/reference/block-kit/blocks","items":{"oneOf":[{"additionalProperties":false,"description":"Section block - displays text alongside optional accessories like buttons, images, or select menus","properties":{"accessory":{"description":"Interactive element (button, select, image, etc.)","properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select","image"],"type":"string"}},"required":["type"],"type":"object"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"fields":{"description":"Array of text objects for multi-column layout (max 10)","items":{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":"array"},"text":{"description":"Main text content - required unless fields is provided","properties":{"emoji":{"description":"Parse emojis (plain_text only)","type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["section"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Divider block - creates a visual divider line","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"type":{"enum":["divider"],"type":"string"}},"required":["type"],"type":"object"},{"additionalProperties":false,"description":"Image block - displays an image","properties":{"alt_text":{"description":"Alt text for accessibility (required)","type":"string"},"block_id":{"description":"Optional unique identifier for the block","type":"string"},"image_url":{"description":"URL of the image to display","type":"string"},"title":{"description":"Optional title displayed below the image","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"},{"additionalProperties":false,"description":"Actions block - container for interactive elements like buttons and select menus","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Interactive elements (max 25)","items":{"properties":{"type":{"enum":["button","static_select","external_select","users_select","conversations_select","channels_select","overflow","datepicker","timepicker","datetime_select"],"type":"string"}},"required":["type"],"type":"object"},"type":"array"},"type":{"enum":["actions"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Context block - displays contextual info with small text and images","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"elements":{"description":"Mix of text and image elements (max 10)","items":{"oneOf":[{"properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["mrkdwn","plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},{"properties":{"alt_text":{"type":"string"},"image_url":{"type":"string"},"type":{"enum":["image"],"type":"string"}},"required":["type","image_url","alt_text"],"type":"object"}]},"type":"array"},"type":{"enum":["context"],"type":"string"}},"required":["type","elements"],"type":"object"},{"additionalProperties":false,"description":"Header block - displays large header text","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"text":{"description":"Header text (plain text only)","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"type":{"enum":["header"],"type":"string"}},"required":["type","text"],"type":"object"},{"additionalProperties":false,"description":"Input block - collects user input in modals and forms","properties":{"block_id":{"description":"Optional unique identifier for the block","type":"string"},"dispatch_action":{"description":"Whether to dispatch actions on character entry","type":"boolean"},"element":{"description":"The input element","properties":{"type":{"enum":["plain_text_input","email_text_input","url_text_input","number_input","static_select","multi_static_select","external_select","multi_external_select","users_select","multi_users_select","conversations_select","multi_conversations_select","channels_select","multi_channels_select","datepicker","timepicker","datetime_select","checkboxes","radio_buttons"],"type":"string"}},"required":["type"],"type":"object"},"hint":{"description":"Optional hint text","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"label":{"description":"Label for the input element","properties":{"emoji":{"type":"boolean"},"text":{"type":"string"},"type":{"enum":["plain_text"],"type":"string"}},"required":["type","text"],"type":"object"},"optional":{"description":"Whether input is optional (default false)","type":"boolean"},"type":{"enum":["input"],"type":"string"}},"required":["type","label","element"],"type":"object"}]},"type":"array"},"bot_id":{"description":"ID of a bot user (e.g., B0123ABC).","type":"string"},"bot_profile":{"description":"Profile information for the bot user that posted the message.","properties":{"app_id":{"description":"The App ID associated with this bot (same as the outer app_id if present).","type":"string"},"deleted":{"description":"Indicates if the bot user is deleted.","type":"boolean"},"icons":{"description":"URLs for the bot''s avatar images.","properties":{"image_36":{"description":"URL for 36x36px icon.","type":"string"},"image_48":{"description":"URL for 48x48px icon.","type":"string"},"image_72":{"description":"URL for 72x72px icon.","type":"string"}},"required":["image_36","image_48","image_72"],"type":"object"},"id":{"description":"Bot ID (same as the outer bot_id if present).","type":"string"},"name":{"description":"Display name of the bot.","type":"string"},"team_id":{"description":"The Team ID (workspace ID) this bot belongs to (same as the outer team if present).","type":"string"},"updated":{"description":"Timestamp (Unix epoch) of the last profile update.","type":"number"}},"required":["id","deleted","name","updated","app_id","icons","team_id"],"type":"object"},"parent_user_id":{"description":"Optional. The user ID of the author of the parent message, if this message is a reply in a thread.","type":"string"},"subtype":{"description":"Optional. Indicates a subtype of message, e.g., ''bot_message''. For messages sent by this block, it''s often ''bot_message''.","type":"string"},"team":{"description":"ID of a Slack workspace (team) (e.g., T0123ABC).","type":"string"},"text":{"description":"The textual content of the message. Markdown is supported by default in many contexts.","type":"string"},"thread_ts":{"description":"Optional. The timestamp of the parent message, if this message is part of a thread. If this message starts a new thread by replying to an existing message, this field will be present. If it''s a brand new message not in a thread, this field is usually absent unless it becomes the parent of a new thread, in which case `thread_ts` would equal `ts`.","type":"string"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"},"type":{"description":"The type of the object, always ''message''.","enum":["message"],"type":"string"},"user":{"description":"The user ID of the sender. For messages sent by a bot token, this is the bot''s user ID.","type":"string"}},"required":["type","ts","text","user","bot_id","app_id","team","bot_profile","blocks"],"type":"object"},"ts":{"description":"Timestamp of the message. This value is effectively the ID of the message in Slack''s API and is used to reference it in other operations (e.g., updating, deleting, threading).","type":"string"}},"required":["ts","channel","message"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [498, 920]
    inputs:
      default:
        links:
          - block: Sleep (1)
            output: default
        config:
          blocks: !expr |-
            [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "this message shall stay: " + outputs.echo.message.text
                }
              }
            ]
          channelId: !expr outputs.echo.channel
          threadTs: !expr outputs.echo.ts
